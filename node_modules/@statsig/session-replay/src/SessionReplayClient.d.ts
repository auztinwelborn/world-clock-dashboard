import type { eventWithTime } from '@rrweb/types';
import * as rrweb from 'rrweb';
import { Flatten } from '@statsig/client-core';
export type ReplayEvent = Flatten<eventWithTime & {
    eventIndex: number;
}>;
export type RRWebConfig = Omit<rrweb.recordOptions<unknown>, 'emit'>;
export type ReplaySessionData = {
    startTime: number;
    endTime: number;
    clickCount: number;
};
export declare class SessionReplayClient {
    private _stopFn;
    private _stopCallback?;
    private _startTimestamp;
    private _endTimestamp;
    record(callback: (latest: ReplayEvent, data: ReplaySessionData, isCheckout?: boolean) => void, config: RRWebConfig, stopCallback?: () => void, keepRollingWindow?: boolean): void;
    stop(): void;
    isRecording(): boolean;
}
