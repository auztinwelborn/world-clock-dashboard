{
  "version": 3,
  "sources": ["../../@statsig/web-analytics/src/AutoCaptureEvent.js", "../../@statsig/web-analytics/src/EngagementManager.js", "../../@statsig/web-analytics/src/RageClickManager.js", "../../@statsig/web-analytics/src/commonUtils.js", "../../@statsig/web-analytics/src/eventUtils.js", "../../@statsig/web-analytics/src/metadataUtils.js", "../../@statsig/web-analytics/src/AutoCapture.js", "../../@statsig/web-analytics/src/index.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoCaptureEventName = void 0;\nexports.AutoCaptureEventName = {\n    PAGE_VIEW: 'auto_capture::page_view',\n    PAGE_VIEW_END: 'auto_capture::page_view_end',\n    ERROR: 'auto_capture::error',\n    SESSION_START: 'auto_capture::session_start',\n    PERFORMANCE: 'auto_capture::performance',\n    FORM_SUBMIT: 'auto_capture::form_submit',\n    CLICK: 'auto_capture::click',\n    RAGE_CLICK: 'auto_capture::rage_click',\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EngagementManager = void 0;\nconst client_core_1 = require(\"@statsig/client-core\");\nconst PAGE_INACTIVE_TIMEOUT = 600000; // 10 minutes\nclass EngagementManager {\n    constructor() {\n        this._lastScrollY = 0;\n        this._maxScrollY = 0;\n        this._lastScrollPercentage = 0;\n        this._maxScrollPercentage = 0;\n        this._lastPageViewTime = Date.now();\n        this._inactiveTimer = null;\n        this._onInactivityCallback = null;\n        this._initializeScrollTracking();\n    }\n    _initializeScrollTracking() {\n        const win = (0, client_core_1._getWindowSafe)();\n        if (!win)\n            return;\n        win.addEventListener('scroll', () => this._handleScroll());\n        win.addEventListener('scrollend', () => this._handleScroll());\n        win.addEventListener('resize', () => this._handleScroll());\n    }\n    _handleScroll() {\n        const win = (0, client_core_1._getWindowSafe)();\n        const doc = (0, client_core_1._getDocumentSafe)();\n        if (!win || !doc)\n            return;\n        const scrollHeight = doc.body.scrollHeight;\n        const scrollY = win.scrollY || doc.documentElement.scrollTop || 0;\n        const innerHeight = win.innerHeight;\n        this._lastScrollY = scrollY;\n        this._maxScrollY = Math.max(this._maxScrollY, scrollY);\n        const currentScrollPercentage = Math.min(100, Math.round(((scrollY + innerHeight) / scrollHeight) * 100));\n        this._lastScrollPercentage = currentScrollPercentage;\n        this._maxScrollPercentage = Math.max(this._maxScrollPercentage, currentScrollPercentage);\n        this.bumpInactiveTimer();\n    }\n    getScrollMetrics() {\n        return {\n            lastScrollY: this._lastScrollY,\n            maxScrollY: this._maxScrollY,\n            lastScrollPercentage: this._lastScrollPercentage,\n            maxScrollPercentage: this._maxScrollPercentage,\n            scrollDepth: this._maxScrollPercentage, // deprecated\n        };\n    }\n    getPageViewLength() {\n        return Date.now() - this._lastPageViewTime;\n    }\n    setLastPageViewTime(time) {\n        this._lastPageViewTime = time;\n    }\n    startInactivityTracking(callback) {\n        this._onInactivityCallback = callback;\n    }\n    bumpInactiveTimer() {\n        const win = (0, client_core_1._getWindowSafe)();\n        if (!win) {\n            return;\n        }\n        if (this._inactiveTimer) {\n            clearTimeout(this._inactiveTimer);\n        }\n        this._inactiveTimer = win.setTimeout(() => {\n            if (this._onInactivityCallback) {\n                this._onInactivityCallback();\n            }\n        }, PAGE_INACTIVE_TIMEOUT);\n    }\n}\nexports.EngagementManager = EngagementManager;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst RAGE_CLICK_THRESHOLD_PX = 30;\nconst RAGE_CLICK_TIMEOUT_MS = 1000;\nconst RAGE_CLICK_CLICK_COUNT = 3;\nclass RageClickManager {\n    constructor() {\n        this._clicks = [];\n    }\n    isRageClick(x, y, timestamp) {\n        // Remove clicks outside the timeout window\n        this._clicks = this._clicks.filter((click) => timestamp - click.timestamp < RAGE_CLICK_TIMEOUT_MS);\n        const isCloseEnough = (click) => {\n            const dx = x - click.x;\n            const dy = y - click.y;\n            return Math.abs(dx) + Math.abs(dy) <= RAGE_CLICK_THRESHOLD_PX;\n        };\n        // If previous clicks exist, check spatial threshold\n        if (this._clicks.length > 0 &&\n            !isCloseEnough(this._clicks[this._clicks.length - 1])) {\n            this._clicks = [];\n        }\n        this._clicks.push({ x, y, timestamp });\n        return this._clicks.length >= RAGE_CLICK_CLICK_COUNT;\n    }\n}\nexports.default = RageClickManager;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._getAnchorNodeInHierarchy = exports._getSafeTimezoneOffset = exports._getSafeTimezone = exports._getSafeNetworkInformation = exports._registerEventHandler = exports._getSanitizedPageUrl = exports._getSafeUrl = exports._shouldLogEvent = exports._getTargetNode = exports._stripEmptyValues = void 0;\nconst client_core_1 = require(\"@statsig/client-core\");\nfunction _stripEmptyValues(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(([_, value]) => value != null && value !== '' && value !== undefined));\n}\nexports._stripEmptyValues = _stripEmptyValues;\nfunction _getTargetNode(e) {\n    if (!e) {\n        return null;\n    }\n    let target = e.target || e.srcElement;\n    if (!target || !(target instanceof Element)) {\n        return null;\n    }\n    if (target.nodeType === 3) {\n        target = (target.parentNode || null);\n    }\n    return target;\n}\nexports._getTargetNode = _getTargetNode;\nfunction _shouldLogEvent(e, el) {\n    if (!e || !el || el.nodeType !== 1) {\n        return false;\n    }\n    const tagName = el.tagName.toLowerCase();\n    const eventType = e.type.toLowerCase();\n    switch (tagName) {\n        case 'html':\n            return false;\n        case 'form':\n            return eventType === 'submit';\n        case 'input':\n        case 'select':\n        case 'textarea':\n            return ['change'].includes(eventType);\n        default:\n            if (eventType === 'click') {\n                if (tagName === 'button') {\n                    return true;\n                }\n                const anchor = _getAnchorNodeInHierarchy(el);\n                if (anchor) {\n                    return true;\n                }\n            }\n            return false;\n    }\n}\nexports._shouldLogEvent = _shouldLogEvent;\nfunction _getSafeUrl() {\n    var _a, _b, _c;\n    const href = (_c = (_b = (_a = (0, client_core_1._getWindowSafe)()) === null || _a === void 0 ? void 0 : _a.location) === null || _b === void 0 ? void 0 : _b.href) !== null && _c !== void 0 ? _c : '';\n    let url;\n    try {\n        url = new URL(href);\n    }\n    catch (e) {\n        url = new URL('error:');\n    }\n    return url;\n}\nexports._getSafeUrl = _getSafeUrl;\nfunction _getSanitizedPageUrl() {\n    return (0, client_core_1._getCurrentPageUrlSafe)() || '';\n}\nexports._getSanitizedPageUrl = _getSanitizedPageUrl;\nfunction _registerEventHandler(element, eventType, handler) {\n    if (!element || !element.addEventListener) {\n        return;\n    }\n    element.addEventListener(eventType, handler, true);\n}\nexports._registerEventHandler = _registerEventHandler;\nfunction _getSafeNetworkInformation() {\n    const win = (0, client_core_1._getWindowSafe)();\n    if (!win || !win.navigator) {\n        return null;\n    }\n    const connection = win.navigator.connection;\n    if (!connection) {\n        return null;\n    }\n    return connection;\n}\nexports._getSafeNetworkInformation = _getSafeNetworkInformation;\nfunction _getSafeTimezone() {\n    try {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n    catch (e) {\n        return null;\n    }\n}\nexports._getSafeTimezone = _getSafeTimezone;\nfunction _getSafeTimezoneOffset() {\n    try {\n        return new Date().getTimezoneOffset();\n    }\n    catch (e) {\n        return null;\n    }\n}\nexports._getSafeTimezoneOffset = _getSafeTimezoneOffset;\nfunction _getAnchorNodeInHierarchy(node) {\n    if (!node) {\n        return null;\n    }\n    let parent = node;\n    while (parent) {\n        const parentTagName = parent.tagName.toLowerCase();\n        if (['body', 'document'].includes(parentTagName)) {\n            return null;\n        }\n        if (parent.tagName.toLowerCase() === 'a') {\n            return parent;\n        }\n        parent = parent.parentElement;\n    }\n    return null;\n}\nexports._getAnchorNodeInHierarchy = _getAnchorNodeInHierarchy;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._getMetadataFromElement = exports._gatherEventData = void 0;\nconst client_core_1 = require(\"@statsig/client-core\");\nconst commonUtils_1 = require(\"./commonUtils\");\nconst MAX_ATTRIBUTE_LENGTH = 1000;\nconst MAX_CLASS_LIST_LENGTH = 100;\nconst MAX_SELECTOR_DEPTH = 50;\nfunction _gatherEventData(target) {\n    const tagName = target.tagName.toLowerCase();\n    const metadata = {};\n    const value = (0, client_core_1._getCurrentPageUrlSafe)() || '';\n    metadata['tagName'] = tagName;\n    const elementMetadata = _getMetadataFromElement(target);\n    Object.assign(metadata, elementMetadata);\n    if (tagName === 'form') {\n        Object.assign(metadata, _getFormMetadata(target));\n    }\n    if (['input', 'select', 'textarea'].includes(tagName) &&\n        target.getAttribute('type') !== 'password') {\n        Object.assign(metadata, _getInputMetadata(target));\n    }\n    const anchor = (0, commonUtils_1._getAnchorNodeInHierarchy)(target);\n    if (anchor) {\n        Object.assign(metadata, _getAnchorMetadata(anchor));\n    }\n    if (tagName === 'button' || anchor) {\n        Object.assign(metadata, _getButtonMetadata(anchor || target));\n    }\n    return { value, metadata };\n}\nexports._gatherEventData = _gatherEventData;\nfunction _getFormMetadata(target) {\n    var _a;\n    const metadata = {};\n    metadata['action'] = target.getAttribute('action');\n    metadata['method'] = (_a = target.getAttribute('method')) !== null && _a !== void 0 ? _a : 'GET';\n    metadata['formName'] = target.getAttribute('name');\n    metadata['formId'] = target.getAttribute('id');\n    return metadata;\n}\nfunction _getInputMetadata(target) {\n    const metadata = {};\n    metadata['content'] = target.value;\n    metadata['inputName'] = target.getAttribute('name');\n    return metadata;\n}\nfunction _getAnchorMetadata(anchor) {\n    const metadata = {};\n    metadata['href'] = anchor.getAttribute('href');\n    return metadata;\n}\nfunction _getButtonMetadata(target) {\n    const metadata = {};\n    metadata['content'] = (target.textContent || '').trim();\n    const dataset = _gatherDatasetProperties(target);\n    Object.assign(metadata, dataset);\n    return metadata;\n}\nfunction _gatherDatasetProperties(el) {\n    const dataset = {};\n    if (!el) {\n        return dataset;\n    }\n    const attr = el === null || el === void 0 ? void 0 : el.dataset;\n    if (!attr) {\n        return dataset;\n    }\n    for (const key in attr) {\n        dataset[`data-${key}`] = attr[key] || '';\n    }\n    return dataset;\n}\nfunction _truncateString(str, maxLength) {\n    if (!str)\n        return null;\n    return str.length > maxLength ? str.substring(0, maxLength) + '...' : str;\n}\nfunction _getMetadataFromElement(target) {\n    const metadata = {};\n    const classList = Array.from(target.classList);\n    metadata['classList'] =\n        classList.length > 0 ? classList.slice(0, MAX_CLASS_LIST_LENGTH) : null;\n    metadata['class'] = _normalizeClassAttribute(_truncateString(target.getAttribute('class'), MAX_ATTRIBUTE_LENGTH) || '');\n    metadata['id'] = _truncateString(target.getAttribute('id'), MAX_ATTRIBUTE_LENGTH);\n    metadata['ariaLabel'] = _truncateString(target.getAttribute('aria-label'), MAX_ATTRIBUTE_LENGTH);\n    metadata['selector'] = _generateCssSelector(target);\n    return metadata;\n}\nexports._getMetadataFromElement = _getMetadataFromElement;\nfunction _normalizeClassAttribute(className) {\n    return className.replace(/\\s+/g, ' ').trim();\n}\nfunction hasNextSiblingWithSameTag(element) {\n    let sibling = element.nextElementSibling;\n    while (sibling) {\n        if (sibling.tagName === element.tagName) {\n            return true;\n        }\n        sibling = sibling.nextElementSibling;\n    }\n    return false;\n}\nfunction getElementSelector(element) {\n    const tagName = element.tagName.toLowerCase();\n    // 1. Use ID if available\n    if (element.id) {\n        return `#${element.id}`;\n    }\n    // 2. Build class-based selector\n    let selector = tagName;\n    if (element.className && typeof element.className === 'string') {\n        const classes = element.className.trim().split(/\\s+/);\n        if (classes.length > 0 && classes[0] !== '') {\n            selector += '.' + classes.join('.');\n        }\n    }\n    const parent = element.parentElement;\n    if (parent && parent.children.length > 1) {\n        let nthChild = 1;\n        let nthOfType = 1;\n        let sibling = element.previousElementSibling;\n        while (sibling) {\n            nthChild++;\n            if (sibling.tagName === element.tagName) {\n                nthOfType++;\n            }\n            sibling = sibling.previousElementSibling;\n        }\n        selector += `:nth-child(${nthChild})`;\n        // Only add nth-of-type if there are other elements with the same tag\n        if (nthOfType > 1 || hasNextSiblingWithSameTag(element)) {\n            selector += `:nth-of-type(${nthOfType})`;\n        }\n    }\n    return selector;\n}\nfunction _generateCssSelector(element) {\n    if (!element) {\n        return '';\n    }\n    // Handle case where element has no parent (e.g., detached element)\n    if (!element.parentNode) {\n        const tagName = element.tagName.toLowerCase();\n        if (element.id) {\n            return `#${element.id}`;\n        }\n        let selector = tagName;\n        if (element.className && typeof element.className === 'string') {\n            const classes = element.className.trim().split(/\\s+/);\n            if (classes.length > 0 && classes[0] !== '') {\n                selector += '.' + classes.join('.');\n            }\n        }\n        return selector;\n    }\n    // Build the full selector path\n    const selectors = [];\n    let currentElement = element;\n    let depth = 0;\n    while (currentElement &&\n        currentElement.nodeType === Node.ELEMENT_NODE &&\n        depth < MAX_SELECTOR_DEPTH) {\n        const selector = getElementSelector(currentElement);\n        selectors.unshift(selector);\n        // Stop if we found an ID (since IDs should be unique)\n        if (currentElement.id) {\n            break;\n        }\n        currentElement = currentElement.parentElement;\n        // Stop at document body to avoid going too far up\n        if (currentElement && currentElement.tagName.toLowerCase() === 'body') {\n            break;\n        }\n        depth++;\n    }\n    return selectors.join(' > ');\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._getNetworkInfo = exports._gatherAllMetadata = exports._gatherCommonMetadata = void 0;\nconst client_core_1 = require(\"@statsig/client-core\");\nconst commonUtils_1 = require(\"./commonUtils\");\nfunction _gatherCommonMetadata(url) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const safeDoc = (0, client_core_1._getDocumentSafe)();\n    const safeWnd = (0, client_core_1._getWindowSafe)();\n    return (0, commonUtils_1._stripEmptyValues)(Object.assign({ title: safeDoc === null || safeDoc === void 0 ? void 0 : safeDoc.title, current_url: (_a = safeWnd === null || safeWnd === void 0 ? void 0 : safeWnd.location) === null || _a === void 0 ? void 0 : _a.href, user_agent: ((_b = safeWnd === null || safeWnd === void 0 ? void 0 : safeWnd.navigator) === null || _b === void 0 ? void 0 : _b.userAgent) &&\n            ((_d = (_c = safeWnd === null || safeWnd === void 0 ? void 0 : safeWnd.navigator) === null || _c === void 0 ? void 0 : _c.userAgent) === null || _d === void 0 ? void 0 : _d.length) > 200\n            ? safeWnd.navigator.userAgent.substring(0, 200)\n            : (_e = safeWnd === null || safeWnd === void 0 ? void 0 : safeWnd.navigator) === null || _e === void 0 ? void 0 : _e.userAgent, locale: (_f = safeWnd === null || safeWnd === void 0 ? void 0 : safeWnd.navigator) === null || _f === void 0 ? void 0 : _f.language, hostname: url.hostname, pathname: url.pathname, screen_width: (_g = safeWnd === null || safeWnd === void 0 ? void 0 : safeWnd.screen) === null || _g === void 0 ? void 0 : _g.width, screen_height: (_h = safeWnd === null || safeWnd === void 0 ? void 0 : safeWnd.screen) === null || _h === void 0 ? void 0 : _h.height, viewport_width: safeWnd === null || safeWnd === void 0 ? void 0 : safeWnd.innerWidth, viewport_height: safeWnd === null || safeWnd === void 0 ? void 0 : safeWnd.innerHeight, timestamp: Date.now(), timezone: (0, commonUtils_1._getSafeTimezone)(), timezone_offset: (0, commonUtils_1._getSafeTimezoneOffset)() }, _getNetworkInfo()));\n}\nexports._gatherCommonMetadata = _gatherCommonMetadata;\nfunction _gatherAllMetadata(url) {\n    const safeDoc = (0, client_core_1._getDocumentSafe)();\n    const safeWnd = (0, client_core_1._getWindowSafe)();\n    if (!safeDoc || !safeWnd) {\n        return {};\n    }\n    const referrerInfo = getReferrerInfo(safeDoc);\n    const commonInfo = _gatherCommonMetadata(url);\n    const campaignParams = getCampaignParams(url);\n    const queryParams = {};\n    url.searchParams.forEach((v, k) => {\n        queryParams[k] = v;\n    });\n    return Object.assign(Object.assign({}, commonInfo), (0, commonUtils_1._stripEmptyValues)(Object.assign(Object.assign(Object.assign({}, referrerInfo), campaignParams), queryParams)));\n}\nexports._gatherAllMetadata = _gatherAllMetadata;\nfunction _getNetworkInfo() {\n    const networkInfo = (0, commonUtils_1._getSafeNetworkInformation)();\n    const result = {};\n    if ((networkInfo === null || networkInfo === void 0 ? void 0 : networkInfo.effectiveType) !== undefined) {\n        result['effective_connection_type'] = networkInfo.effectiveType;\n    }\n    if ((networkInfo === null || networkInfo === void 0 ? void 0 : networkInfo.rtt) !== undefined) {\n        result['rtt_ms'] = networkInfo.rtt;\n    }\n    if ((networkInfo === null || networkInfo === void 0 ? void 0 : networkInfo.downlink) !== undefined) {\n        result['downlink_mbps'] = networkInfo.downlink;\n        result['downlink_kbps'] = networkInfo.downlink * 1000; // deprecated\n    }\n    if ((networkInfo === null || networkInfo === void 0 ? void 0 : networkInfo.saveData) !== undefined) {\n        result['save_data'] = networkInfo.saveData;\n    }\n    return result;\n}\nexports._getNetworkInfo = _getNetworkInfo;\nfunction getReferrerInfo(safeDoc) {\n    const referrer = (safeDoc === null || safeDoc === void 0 ? void 0 : safeDoc.referrer) || '';\n    if (!referrer) {\n        return {\n            referrer: null,\n            referrer_domain: null,\n            referrer_path: null,\n            searchEngine: '',\n            searchQuery: '',\n        };\n    }\n    try {\n        const url = new URL(referrer);\n        const host = url.hostname;\n        const searchEngine = ['google', 'bing', 'yahoo', 'duckduckgo', 'baidu'].find((e) => host.includes(e + '.')) || '';\n        const searchQuery = url.searchParams.get(searchEngine === 'yahoo' ? 'p' : 'q') || '';\n        return {\n            referrer,\n            referrer_domain: url.hostname,\n            referrer_path: url.pathname,\n            searchEngine,\n            searchQuery,\n        };\n    }\n    catch (e) {\n        return {\n            referrer: null,\n            referrer_domain: null,\n            referrer_path: null,\n            searchEngine: '',\n            searchQuery: '',\n        };\n    }\n}\nfunction getCampaignParams(url) {\n    const urlParams = url.searchParams;\n    const campaignParams = {};\n    const commonUtms = [\n        'utm_source',\n        'utm_medium',\n        'utm_campaign',\n        'utm_term',\n        'utm_content',\n        'msclkid', // Bing\n        'dclid', // DoubleClick\n        'fbclid', // Facebook\n        'gad_source', // Google\n        'gclid', // Google\n        'gclsrc', // Google\n        'wbraid', // Google\n        'utm_id', // Hubspot\n        'irclid', // Impact\n        'igshid', // Instagram\n        '_kx', // Klaviyo\n        'li_fat_id', // LinkedIn\n        'mc_cid', // Mailchimp\n        'mc_eid', // Mailchimp\n        'epik', // Pinterest\n        'qclid', // Quora\n        'rdt_cid', // Reddit\n        'sccid', // Snapchat\n        'ttc', // TikTok\n        'ttclid', // TikTok\n        'ttc_id', // TikTok\n        'twclid', // Twitter\n    ];\n    commonUtms.forEach((p) => {\n        const val = urlParams.get(p);\n        if (val) {\n            campaignParams[p] = val;\n        }\n    });\n    return campaignParams;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoCapture = exports.runStatsigAutoCapture = exports.StatsigAutoCapturePlugin = void 0;\nconst client_core_1 = require(\"@statsig/client-core\");\nconst AutoCaptureEvent_1 = require(\"./AutoCaptureEvent\");\nconst EngagementManager_1 = require(\"./EngagementManager\");\nconst RageClickManager_1 = require(\"./RageClickManager\");\nconst commonUtils_1 = require(\"./commonUtils\");\nconst eventUtils_1 = require(\"./eventUtils\");\nconst metadataUtils_1 = require(\"./metadataUtils\");\nconst AUTO_EVENT_MAPPING = {\n    submit: AutoCaptureEvent_1.AutoCaptureEventName.FORM_SUBMIT,\n    click: AutoCaptureEvent_1.AutoCaptureEventName.CLICK,\n};\nclass StatsigAutoCapturePlugin {\n    constructor(_options) {\n        this._options = _options;\n        this.__plugin = 'auto-capture';\n    }\n    bind(client) {\n        runStatsigAutoCapture(client, this._options);\n    }\n}\nexports.StatsigAutoCapturePlugin = StatsigAutoCapturePlugin;\nfunction runStatsigAutoCapture(client, options) {\n    return new AutoCapture(client, options);\n}\nexports.runStatsigAutoCapture = runStatsigAutoCapture;\nclass AutoCapture {\n    constructor(_client, options) {\n        var _a, _b, _c;\n        this._client = _client;\n        this._disabledEvents = {};\n        this._previousLoggedPageViewUrl = null;\n        this._hasLoggedPageViewEnd = false;\n        const { sdkKey, errorBoundary, values } = _client.getContext();\n        this._disabledEvents = (_b = (_a = values === null || values === void 0 ? void 0 : values.auto_capture_settings) === null || _a === void 0 ? void 0 : _a.disabled_events) !== null && _b !== void 0 ? _b : {};\n        this._errorBoundary = errorBoundary;\n        this._errorBoundary.wrap(this);\n        this._client.$on('values_updated', () => {\n            var _a, _b;\n            const values = this._client.getContext().values;\n            this._disabledEvents =\n                (_b = (_a = values === null || values === void 0 ? void 0 : values.auto_capture_settings) === null || _a === void 0 ? void 0 : _a.disabled_events) !== null && _b !== void 0 ? _b : this._disabledEvents;\n        });\n        this._engagementManager = new EngagementManager_1.EngagementManager();\n        this._rageClickManager = new RageClickManager_1.default();\n        this._eventFilterFunc = options === null || options === void 0 ? void 0 : options.eventFilterFunc;\n        const doc = (0, client_core_1._getDocumentSafe)();\n        if (!(0, client_core_1._isServerEnv)()) {\n            __STATSIG__ = (0, client_core_1._getStatsigGlobal)();\n            const instances = (_c = __STATSIG__.acInstances) !== null && _c !== void 0 ? _c : {};\n            instances[sdkKey] = this;\n            __STATSIG__.acInstances = instances;\n        }\n        if ((doc === null || doc === void 0 ? void 0 : doc.readyState) === 'loading') {\n            doc.addEventListener('DOMContentLoaded', () => this._initialize());\n            return;\n        }\n        this._initialize();\n    }\n    _addEventHandlers() {\n        const win = (0, client_core_1._getWindowSafe)();\n        const doc = (0, client_core_1._getDocumentSafe)();\n        if (!win || !doc) {\n            return;\n        }\n        const eventHandler = (event, userAction = true) => {\n            var _a;\n            const e = event || ((_a = (0, client_core_1._getWindowSafe)()) === null || _a === void 0 ? void 0 : _a.event);\n            this._autoLogEvent(e);\n            if (userAction) {\n                this._engagementManager.bumpInactiveTimer();\n            }\n            if (e.type === 'click' && e instanceof MouseEvent) {\n                const isRageClick = this._rageClickManager.isRageClick(e.clientX, e.clientY, Date.now());\n                if (isRageClick) {\n                    this._logRageClick(e);\n                }\n            }\n        };\n        (0, commonUtils_1._registerEventHandler)(doc, 'click', (e) => eventHandler(e));\n        (0, commonUtils_1._registerEventHandler)(doc, 'submit', (e) => eventHandler(e));\n        (0, commonUtils_1._registerEventHandler)(win, 'error', (e) => eventHandler(e, false));\n        (0, commonUtils_1._registerEventHandler)(win, 'pagehide', () => this._tryLogPageViewEnd());\n        (0, commonUtils_1._registerEventHandler)(win, 'beforeunload', () => this._tryLogPageViewEnd());\n    }\n    _addPageViewTracking() {\n        const win = (0, client_core_1._getWindowSafe)();\n        const doc = (0, client_core_1._getDocumentSafe)();\n        if (!win || !doc) {\n            return;\n        }\n        (0, commonUtils_1._registerEventHandler)(win, 'popstate', () => this._tryLogPageView());\n        window.history.pushState = new Proxy(window.history.pushState, {\n            apply: (target, thisArg, [state, unused, url]) => {\n                target.apply(thisArg, [state, unused, url]);\n                this._tryLogPageView();\n            },\n        });\n        this._tryLogPageView();\n    }\n    _autoLogEvent(event) {\n        var _a;\n        const eventType = (_a = event.type) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n        if (eventType === 'error' && event instanceof ErrorEvent) {\n            this._logError(event);\n            return;\n        }\n        const target = (0, commonUtils_1._getTargetNode)(event);\n        if (!target) {\n            return;\n        }\n        if (!(0, commonUtils_1._shouldLogEvent)(event, target)) {\n            return;\n        }\n        const eventName = AUTO_EVENT_MAPPING[eventType];\n        if (!eventName) {\n            return;\n        }\n        const { value, metadata } = (0, eventUtils_1._gatherEventData)(target);\n        const allMetadata = (0, metadataUtils_1._gatherAllMetadata)((0, commonUtils_1._getSafeUrl)());\n        this._enqueueAutoCapture(eventName, value, Object.assign(Object.assign({}, allMetadata), metadata));\n    }\n    _initialize() {\n        this._engagementManager.startInactivityTracking(() => this._tryLogPageViewEnd(true));\n        this._addEventHandlers();\n        this._addPageViewTracking();\n        this._logSessionStart();\n        this._logPerformance();\n    }\n    _logError(event) {\n        const error = (event === null || event === void 0 ? void 0 : event.error) || {};\n        let errorStr = error;\n        if (typeof error === 'object') {\n            try {\n                errorStr = JSON.stringify(error);\n            }\n            catch (e) {\n                errorStr =\n                    typeof (error === null || error === void 0 ? void 0 : error.toString) === 'function'\n                        ? error.toString()\n                        : 'Unknown Error';\n            }\n        }\n        this._enqueueAutoCapture(AutoCaptureEvent_1.AutoCaptureEventName.ERROR, event.message, {\n            message: event.message,\n            filename: event.filename,\n            lineno: event.lineno,\n            colno: event.colno,\n            error_str: errorStr,\n        });\n    }\n    _logSessionStart() {\n        const session = this._getSessionFromClient();\n        try {\n            if (!this._isNewSession(session)) {\n                return;\n            }\n            this._enqueueAutoCapture(AutoCaptureEvent_1.AutoCaptureEventName.SESSION_START, (0, commonUtils_1._getSanitizedPageUrl)(), { sessionID: session.data.sessionID }, { flushImmediately: true });\n        }\n        catch (err) {\n            this._errorBoundary.logError('AC::logSession', err);\n        }\n    }\n    _tryLogPageView() {\n        const url = (0, commonUtils_1._getSafeUrl)();\n        const last = this._previousLoggedPageViewUrl;\n        if (last && url.href === last.href) {\n            return;\n        }\n        this._engagementManager.setLastPageViewTime(Date.now());\n        this._previousLoggedPageViewUrl = url;\n        this._hasLoggedPageViewEnd = false;\n        const payload = (0, metadataUtils_1._gatherAllMetadata)(url);\n        this._enqueueAutoCapture(AutoCaptureEvent_1.AutoCaptureEventName.PAGE_VIEW, (0, commonUtils_1._getSanitizedPageUrl)(), payload, {\n            flushImmediately: true,\n            addNewSessionMetadata: true,\n        });\n        this._engagementManager.bumpInactiveTimer();\n    }\n    _tryLogPageViewEnd(dueToInactivity = false) {\n        if (this._hasLoggedPageViewEnd) {\n            return;\n        }\n        this._hasLoggedPageViewEnd = true;\n        const scrollMetrics = this._engagementManager.getScrollMetrics();\n        const pageViewLength = this._engagementManager.getPageViewLength();\n        this._enqueueAutoCapture(AutoCaptureEvent_1.AutoCaptureEventName.PAGE_VIEW_END, (0, commonUtils_1._getSanitizedPageUrl)(), Object.assign(Object.assign({}, scrollMetrics), { pageViewLength,\n            dueToInactivity }), {\n            flushImmediately: true,\n        });\n    }\n    _logRageClick(e) {\n        const { value, metadata } = (0, eventUtils_1._gatherEventData)(e.target);\n        this._enqueueAutoCapture(AutoCaptureEvent_1.AutoCaptureEventName.RAGE_CLICK, value, Object.assign(Object.assign({ x: e.clientX, y: e.clientY, timestamp: Date.now() }, (0, metadataUtils_1._gatherAllMetadata)((0, commonUtils_1._getSafeUrl)())), metadata));\n    }\n    _logPerformance() {\n        const win = (0, client_core_1._getWindowSafe)();\n        if (!win || !win.performance) {\n            return;\n        }\n        if (typeof (win === null || win === void 0 ? void 0 : win.performance) === 'undefined' ||\n            typeof win.performance.getEntriesByType !== 'function' ||\n            typeof win.performance.getEntriesByName !== 'function') {\n            return;\n        }\n        setTimeout(() => {\n            const metadata = {};\n            const navEntries = win.performance.getEntriesByType('navigation');\n            if (navEntries &&\n                navEntries.length > 0 &&\n                navEntries[0] instanceof PerformanceNavigationTiming) {\n                const nav = navEntries[0];\n                metadata['load_time_ms'] = nav.duration;\n                metadata['dom_interactive_time_ms'] =\n                    nav.domInteractive - nav.startTime;\n                metadata['redirect_count'] = nav.redirectCount;\n                metadata['transfer_bytes'] = nav.transferSize;\n            }\n            const fpEntries = win.performance.getEntriesByName('first-contentful-paint');\n            if (fpEntries &&\n                fpEntries.length > 0 &&\n                fpEntries[0] instanceof PerformancePaintTiming) {\n                metadata['first_contentful_paint_time_ms'] = fpEntries[0].startTime;\n            }\n            this._enqueueAutoCapture(AutoCaptureEvent_1.AutoCaptureEventName.PERFORMANCE, (0, commonUtils_1._getSanitizedPageUrl)(), Object.assign(Object.assign({}, metadata), (0, metadataUtils_1._getNetworkInfo)()));\n        }, 1);\n    }\n    _enqueueAutoCapture(eventName, value, metadata, options) {\n        var _a, _b, _c;\n        const subname = eventName.slice('auto_capture::'.length);\n        if (this._disabledEvents[eventName] || this._disabledEvents[subname]) {\n            return;\n        }\n        const session = this._getSessionFromClient();\n        try {\n            const logMetadata = Object.assign({ sessionID: session.data.sessionID, page_url: (_c = (_b = (_a = (0, client_core_1._getWindowSafe)()) === null || _a === void 0 ? void 0 : _a.location) === null || _b === void 0 ? void 0 : _b.href) !== null && _c !== void 0 ? _c : '' }, metadata);\n            if (options === null || options === void 0 ? void 0 : options.addNewSessionMetadata) {\n                logMetadata['isNewSession'] = String(this._isNewSession(session));\n            }\n            const event = {\n                eventName,\n                value,\n                metadata: logMetadata,\n            };\n            if (this._eventFilterFunc && !this._eventFilterFunc(event)) {\n                return;\n            }\n            this._client.logEvent(event);\n            if (options === null || options === void 0 ? void 0 : options.flushImmediately) {\n                this._client.flush().catch((e) => {\n                    client_core_1.Log.error(e);\n                });\n            }\n        }\n        catch (err) {\n            this._errorBoundary.logError('AC::enqueue', err);\n        }\n    }\n    _isNewSession(session) {\n        // within the last second\n        return Math.abs(session.data.startTime - Date.now()) < 1000;\n    }\n    _getSessionFromClient() {\n        return this._client.getContext().session;\n    }\n}\nexports.AutoCapture = AutoCapture;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatsigAutoCapturePlugin = exports.runStatsigAutoCapture = exports.AutoCapture = exports.AutoCaptureEventName = void 0;\nconst client_core_1 = require(\"@statsig/client-core\");\nconst AutoCapture_1 = require(\"./AutoCapture\");\nObject.defineProperty(exports, \"AutoCapture\", { enumerable: true, get: function () { return AutoCapture_1.AutoCapture; } });\nObject.defineProperty(exports, \"StatsigAutoCapturePlugin\", { enumerable: true, get: function () { return AutoCapture_1.StatsigAutoCapturePlugin; } });\nObject.defineProperty(exports, \"runStatsigAutoCapture\", { enumerable: true, get: function () { return AutoCapture_1.runStatsigAutoCapture; } });\nvar AutoCaptureEvent_1 = require(\"./AutoCaptureEvent\");\nObject.defineProperty(exports, \"AutoCaptureEventName\", { enumerable: true, get: function () { return AutoCaptureEvent_1.AutoCaptureEventName; } });\nconst __STATSIG__ = Object.assign((0, client_core_1._getStatsigGlobal)(), {\n    AutoCapture: AutoCapture_1.AutoCapture,\n    runStatsigAutoCapture: AutoCapture_1.runStatsigAutoCapture,\n    StatsigAutoCapturePlugin: AutoCapture_1.StatsigAutoCapturePlugin,\n});\nexports.default = __STATSIG__;\n"],
  "mappings": "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",
  "names": ["_a", "_b", "values", "require_src", "__STATSIG__"]
}
